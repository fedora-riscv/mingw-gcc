diff -rupN --no-dereference gcc-11.3.1-20220421/libiberty/rust-demangle.c gcc-11.3.1-20220421-new/libiberty/rust-demangle.c
--- gcc-11.3.1-20220421/libiberty/rust-demangle.c	2022-04-21 14:40:21.000000000 +0200
+++ gcc-11.3.1-20220421-new/libiberty/rust-demangle.c	2022-11-01 14:40:19.488005363 +0100
@@ -120,7 +120,7 @@ parse_integer_62 (struct rust_demangler
     return 0;
 
   x = 0;
-  while (!eat (rdm, '_'))
+  while (!eat (rdm, '_') && !rdm->errored)
     {
       c = next (rdm);
       x *= 62;
@@ -1114,6 +1114,15 @@ demangle_const (struct rust_demangler *r
   if (rdm->errored)
     return;
 
+  if (rdm->recursion != RUST_NO_RECURSION_LIMIT)
+    {
+      ++ rdm->recursion;
+      if (rdm->recursion > RUST_MAX_RECURSION_COUNT)
+	/* FIXME: There ought to be a way to report
+	   that the recursion limit has been reached.  */
+	goto fail_return;
+    }
+
   if (eat (rdm, 'B'))
     {
       backref = parse_integer_62 (rdm);
@@ -1124,7 +1133,7 @@ demangle_const (struct rust_demangler *r
           demangle_const (rdm);
           rdm->next = old_next;
         }
-      return;
+      goto pass_return;
     }
 
   ty_tag = next (rdm);
@@ -1133,7 +1142,7 @@ demangle_const (struct rust_demangler *r
     /* Placeholder. */
     case 'p':
       PRINT ("_");
-      return;
+      goto pass_return;
 
     /* Unsigned integer types. */
     case 'h':
@@ -1166,18 +1175,20 @@ demangle_const (struct rust_demangler *r
       break;
 
     default:
-      rdm->errored = 1;
-      return;
+      goto fail_return;
     }
 
-  if (rdm->errored)
-    return;
-
-  if (rdm->verbose)
+  if (!rdm->errored && rdm->verbose)
     {
       PRINT (": ");
       PRINT (basic_type (ty_tag));
     }
+
+ fail_return:
+  rdm->errored = 1;
+ pass_return:
+  if (rdm->recursion != RUST_NO_RECURSION_LIMIT)
+    -- rdm->recursion;
 }
 
 static void
