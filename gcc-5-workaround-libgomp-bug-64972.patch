--- gcc-5-20150301/libgomp/oacc-parallel.c.orig	2015-03-07 16:50:20.069608638 +0100
+++ gcc-5-20150301/libgomp/oacc-parallel.c	2015-03-07 17:03:12.234344244 +0100
@@ -99,8 +99,10 @@
     gomp_fatal ("num_workers (%d) different from one is not yet supported",
 		num_workers);
 
+#if 0
   gomp_debug (0, "%s: mapnum=%zd, hostaddrs=%p, sizes=%p, kinds=%p, async=%d\n",
 	      __FUNCTION__, mapnum, hostaddrs, sizes, kinds, async);
+#endif
 
   select_acc_device (device);
 
@@ -178,8 +180,10 @@
   bool host_fallback = device == GOMP_DEVICE_HOST_FALLBACK;
   struct target_mem_desc *tgt;
 
+#if 0
   gomp_debug (0, "%s: mapnum=%zd, hostaddrs=%p, sizes=%p, kinds=%p\n",
 	      __FUNCTION__, mapnum, hostaddrs, sizes, kinds);
+#endif
 
   select_acc_device (device);
 
--- gcc-5-20150301/libgomp/target.c.orig	2015-03-07 17:01:13.386384170 +0100
+++ gcc-5-20150301/libgomp/target.c	2015-03-07 17:02:21.584508913 +0100
@@ -437,10 +437,7 @@
 		    {
 		      /* We already looked up the memory region above and it
 			 was missing.  */
-		      size_t size = k->host_end - k->host_start;
-		      gomp_fatal ("present clause: !acc_is_present (%p, "
-				  "%zd (0x%zx))", (void *) k->host_start,
-				  size, size);
+		      gomp_fatal ("present clause: !acc_is_present");
 		    }
 		    break;
 		  case GOMP_MAP_FORCE_DEVICEPTR:
